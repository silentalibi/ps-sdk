// Version 2018.4.24// Clean up all the log files// Clean up all the sme files// Clean up all the lyr files// Clean up all the files created by plugins// Clean up all the files created by the test scriptsLogMessage( "Starting Cleanup" );var filesCleaned = 0;// where am I, and other location(s)var strLocation = Folder( File( $.fileName ).parent ).toString();var strTestHarnessLocation = strLocation + "/harness";var strLogFileLocation = strTestHarnessLocation + "/logfile";try {    var allFiles = Folder( strLogFileLocation ).getFiles();    filesCleaned += RemoveThemAll( allFiles );} catch( e ) { 	; }try {    var allFiles = Folder( Folder.desktop + "/SimpleFormatTests" ).getFiles();    filesCleaned += RemoveThemAll( allFiles, true /* removeDir */, false /* checkFirst */ );} catch( e ) { 	; }try {    var allFiles = Folder( Folder.desktop + "/LayerFormatTests" ).getFiles();    filesCleaned += RemoveThemAll( allFiles, true /* removeDir */, false /* checkFirst */ );} catch( e ) { 	; }try {    var allFiles = [ File( Folder.desktop + "/Dissolve.log"),                     File( Folder.desktop + "/DissolveTest.log"),                     File( Folder.desktop + "/FindPluginInSystemInfo.log"),                     File( Folder.desktop + "/Getter.log"),                     File( Folder.desktop + "/GradientImport.log"),                     File( Folder.desktop + "/LayerFormat.log"),                     File( Folder.desktop + "/Listener.log"),                     File( Folder.desktop + "/OutboundTest.exp"),                     File( Folder.desktop + "/Propetizer.log"),                     File( Folder.desktop + "/PropetizerAll.log"),                     File( Folder.desktop + "/PropetizerCaption.log"),                     File( Folder.desktop + "/PropetizerEXIFData.log"),                     File( Folder.desktop + "/PropetizerScratchVolumeList.log"),                     File( Folder.desktop + "/PropetizerSlices.log"),                     File( Folder.desktop + "/PropetizerXMP.log"),                     File( Folder.desktop + "/SimpleFormat.log"),                     File( Folder.desktop + "/SimpleFormatPlugin.log"),    ];    filesCleaned += RemoveThemAll( allFiles, false /* removeDir */, true /* checkFirst */ );} catch( e ) { 	; }var msg = "Cleanup removed " + filesCleaned + " files.";LogMessage( msg );alert( msg );msg;//////////////////////////////////////////////////////////////////////////////// RemoveThemAll, remove the files and the parent folder if flagged//////////////////////////////////////////////////////////////////////////////function RemoveThemAll( allFiles, removeDir, checkFirst ) {	var filesCleaned = 0;	var parentDir = allFiles.length ? allFiles[0].parent : null;	for ( var i = 0; i < allFiles.length; i++ ) {		if ( checkFirst && allFiles[i].exists ) {            allFiles[i].remove();            LogMessage( allFiles[i].fsName );            filesCleaned++;		} else if ( ! checkFirst ) {            allFiles[i].remove();            LogMessage( allFiles[i].fsName );            filesCleaned++;		}	}	if (parentDir && removeDir) {        parentDir.remove();        filesCleaned++;    }	return filesCleaned;}function LogMessage( inMessage ) {	if ( BridgeTalk.isRunning( "estoolkit" ) )		$.writeln( inMessage );}// end Cleanup.jsx